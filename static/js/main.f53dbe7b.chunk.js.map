{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovies","useState","setMovie","setQuery","loadError","setLoadError","isDataLoading","setIsDataLoading","loadMovie","currentQuery","event","a","preventDefault","data","Title","Plot","Poster","imdbID","onSubmit","toLowerCase","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","onClick","App","setMovies","find","currentMovie","currentMuvies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f53dbe7b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=39f9cfa7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { FormEvent, useState } from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { ResponseError } from '../../types/ResponseError';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovies: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [loadError, setLoadError] = useState<ResponseError | null>(null);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n\n  const loadMovie = async (\n    currentQuery: string,\n    event:FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsDataLoading(true);\n\n    try {\n      const data = await getMovie(currentQuery);\n\n      if ('Error' in data) {\n        setLoadError(data);\n        setIsDataLoading(false);\n      } else {\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          imdbId: data.imdbID,\n        });\n        setIsDataLoading(false);\n      }\n    } catch {\n      setLoadError({\n        Response: 'False',\n        Error: 'unexpected error',\n      });\n      setIsDataLoading(false);\n    } finally {\n      setIsDataLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => loadMovie(query.toLowerCase(), event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setLoadError(null);\n              }}\n            />\n          </div>\n\n          {loadError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isDataLoading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addMovies(movie);\n                  setMovie(null);\n                  setQuery('');\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovies = (movie: Movie) => {\n    if (movies.find((currentMovie => currentMovie.imdbId === movie.imdbId))) {\n      return;\n    }\n\n    setMovies((currentMuvies) => [...currentMuvies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovies={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}